% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/euclideanDistance.R
\name{euclideanDistance}
\alias{euclideanDistance}
\title{Compute Euclidean distance between cases and/or pumps.}
\usage{
euclideanDistance(origin, destination = NULL, type = "case-pump",
  vestry = FALSE, unit = NULL)
}
\arguments{
\item{origin}{Numeric or Integer. Numeric ID of case or pump.}

\item{destination}{Numeric or Integer. Numeric ID of case or pump. Negative selection (exlusion) is possible with negative values. Default is NULL: this returns closest case or pump.}

\item{type}{Character "case-pump", "cases" or "pumps".}

\item{vestry}{Logical. TRUE uses the 14 pumps from the Vestry Report. FALSE uses the 13 pumps from the original map.}

\item{unit}{Character. Unit of measurement: "meter" or "yard". Default is NULL, which returns the map's native scale. See \code{vignette("roads")} for information on unit distances.}
}
\value{
An R vector.
}
\description{
Compute Euclidean distance between cases and/or pumps.
}
\note{
For "cases", "origin" and "destination" need to be a number between 1 and 578. To compute distance, the function uses a case's "address" (i.e., its "anchor case"). For "pumps", "origin" and "destination" must be numbers between 1 and 14 for vestry = TRUE, and 1 and 13 for vestry = FALSE.
}
\examples{
euclideanDistance(1, 2)
euclideanDistance(1, 2, type = "pumps")
euclideanDistance(1, 2, type = "cases")

## Pairwise Euclidean distance between pumps. ##
# pairs <- combn(cholera::pumps$id, 2, simplify = FALSE)
#
# vapply(pairs, function(x) {
#   euclideanDistance(x[1], x[2])$distance
# }, numeric(1L))
}
